// Learning Processing
// Daniel Shiffman
// http://www.learningprocessing.com

// Example 16-11: Simple color tracking

import processing.video.*;
float x;
float y;
float px;
float py;
float easing = 0.05;





// Variable for capture device
Capture video;

// A variable for the color we are searching for.
color trackColor;



void setup() {
  size(640, 480);
  background(255);
  

  video = new Capture(this, width, height);
  // Start off tracking for green
  trackColor = color(20,77,49);

  

  video.start();
  smooth();
}

void draw() {
 
  // Capture and display the video
  if (video.available()) {
    video.read();
    video.loadPixels();
    //image(video, 0, 0);
  }

println(trackColor);

  // Before we begin searching, the "world record" for closest color is set to a high number that is easy for the first pixel to beat.
  float worldRecord = 30; 

  // XY coordinate of closest color
  int closestX = 0;
  int closestY = 0;

  // Begin loop to walk through every pixel
  for (int x = 0; x < video.width; x ++ ) {
    for (int y = 0; y < video.height; y ++ ) {
      int loc = x + y*video.width;
      // What is current color
      color currentColor = video.pixels[loc];
      
      if (currentColor==color(162,29,62))
      {
        background(255);
      }
      
      float r1 = red(currentColor);
      float g1 = green(currentColor);
      float b1 = blue(currentColor);
      float r2 = red(trackColor);
      float g2 = green(trackColor);
      float b2 = blue(trackColor);

      // Using euclidean distance to compare colors
      float d = dist(r1, g1, b1, r2, g2, b2); // We are using the dist( ) function to compare the current color with the color we are tracking.

      // If current color is more similar to tracked color than
      // closest color, save current location and current difference
      if (d < worldRecord) {
        worldRecord = d;
        closestX = x;
        closestY = y;
      }
    }
  }

  // We only consider the color found if its color distance is less than 10. 
  // This threshold of 10 is arbitrary and you can adjust this number depending on how accurate you require the tracking to be.
  if (trackColor == color(20,77,49)) { 
    // Draw a circle at the tracked pixel
    fill(0);
    strokeWeight(4.0);
    stroke(0);

    float targetX = closestX;
    x += (targetX - x) *easing;
    float targetY = closestY;
    y += (targetY -y) *easing;
    float weight = dist(x, y, px, py);
    strokeWeight(weight);
    line(x, y, px, py);
    py=y;
    px=x;
  
 }

}

